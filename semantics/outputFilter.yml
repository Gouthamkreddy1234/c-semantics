# Whitelist the following cells
# T:
  # cell-style:
    # bold: yes
    # background: dullcyan
  # text-styel:
    # foreground: green
k:
  text-style:
    foreground: dullred

env: show

# cell-style:
    # background: dullcyan
  
  # threads:
  # cell-style:
    # foreground: black
# thread:
  # cell-style:

# mem:
  # show
  # text-style:
    # foreground: black
  #keep-chars: 140
  
# mem: show
# threadId: show 

unfinishedComputation: show
xmessages: show

# currentSubObject: show
# currentObject: show
# nestingDepth: show
# blockHistory: show
# localVariables: show
type: show
files: show
computation:
  keep: 4
  keep-chars: 131
currentTranslationUnit: show
currentFunction: show
currentProgramLoc: show
# declarationTypeHolder: show
callStack: recursively-hide
# blockStack: show
# savedInitialization: show
blockStack: recursively-hide
statics: show


# cell-style:
    # foreground: dullyellow
    # foreground: black
# threads:
  # cell-style:
    # foreground: black
# thread:
  # cell-style:

mem: show

# show
# text-style:
# foreground: black
	
# programText: show
	
# global-substitutions:
  # # (': ""
  # # ).KProperLabel: ""
  # # ).KHybridLabel: ""
  # # ).KResultLabel: ""
  # "BaseValue ": ""
  # "Id ": ""
  # "BaseType ": ""
  # "kList(\"wklist_\")": ""
  # # "(.List{K})": ""
  # ",,": ", "
  
options:
  global-substitutions:
    - "`(`.List`{K`}`)": ""                   # Get rid of (.List{K})
    - "Rat ": ""
    # - "`(`'functionObject`)": ""
    # #`.KResultLabel`(Id (.*),,.*`)" : "functionObject(`1)"
    # - "`(`'functionPrototype`)`.KResultLabel`(Id (.*),,.*`)" : "functionPrototype(`1)"
    - "Id Identifier`(\"([^`)]+)\"`)": "`1" # Get rid of the stuff surrounding keys
    - "`(BaseValue ([0-9]+)`)": " `1 "         # make (BaseValue n) be just n, for any number
    - "BaseValue |BaseType |Id ": ""          # Remove BaseValue and BaseType
    - ",,([^ ])": ", `1"                            # Condence commas
    - "  ": " "                            # Condence commas
    # - " , " : ", "                          # Remove a preceeding whitespace, e.g. for the BaseValue conversion
    #- "`(0 `+Nat sym`(([0-9]+)`)`)": "sym(`1)"      # Change the destination field of the values in a map
    - "kList`(\"wklist_\"`)`(([0-9]+)`)": "`1"            # Get rid of the wklist
    - "kList`(\"wklist_\"`)`(`(([0-9]+ `+Nat sym`([0-9]+`))`)`)": "`1"            # Get rid of the wklist
    - ".KProperLabel": ""
    - ".KResultLabel": ""
    - "```[HOLE```]:K": "[HOLE]"
    - "`(([0-9]+)`),": "`1,"
  spaceless-cells: yes
  #infixify: yes
  #end-cell-linebreak: yes
  
  # line-end: " $"
  # syntax-highlighting: # Coming soon
    # - "::": yellow
    # - "==": yellow
    # - ":=": yellow
    # - ">>": yellow
    # - "<<": yellow
    # - "?": yellow
    # - "`+": yellow
    # - "`[`.`.`. `d+ more `.`.`.`]": black


# Default behavior is to blacklist everything else. Note that neither whitelisting or blacklisting are
# recursive, e.g. blacklisting <thread> wont blacklist all of its children

# Current features:
#   whitelisting
#   keep only a certain number of lines
#   recursive hide


# Upcoming features:
#   colors
#   environment/memory lookup
#   regular-expression based line-based show/hide
#   arbitrary global and local string-replacement rules
#   local and global regular-expression based styling (bold, underline, color, etc)
